/**
 * \file bloki.h
 * Этот файл содержит класс gBLock, где объявлены все действия с главным блоком
 */
#ifndef BLOKI_H
#define BLOKI_H

#include <vector>
#include <map>
#include "posicii.h"
#include "colors.h"

/**
 * \class gBlock
 * Класс, представляющий блок в игре.
 *
 * Этот класс используется для управления блоками в игре, включая их размеры, повороты, цвета и позиции.
 */

class gBlock
{
public:
    /**
     * Конструктор по умолчанию для класса gBlock.
     *
     * Инициализирует новый блок с заданными значениями по умолчанию:
     * - Размер клетки устанавливается в 30.
     * - Угол поворота устанавливается в 0.
     * - Цвета блока инициализируются с помощью функции PoluchitColor().
     * - Переменные colPerev и rowPerev устанавливаются в 0.
     */
    gBlock();

    /**
     * Рисует блок на экране с заданным смещением.
     *
     * \param[in] int offsetX Смещение по оси X.
     * \param[in] int offsetY Смещение по оси Y.
     */
    void Risov(int offsetX, int offsetY);

    /**
     * Перемещает блок на заданное количество строк и столбцов.
     *
     * \param[in] int rows Количество строк для перемещения.
     * \param[in] int cols Количество столбцов для перемещения.
     */
    void Move(int rows, int cols);

    /**
     * Возвращает текущие позиции блока.
     *
     * \return Вектор с позициями блока.
     */
    std::vector<Posicii> PoluchPosicii();

    /**
     * Поворачивает блок на 90 градусов по часовой стрелке.
     */
    void Rotate();

    /**
     * Отменяет последний поворот блока.
     */
    void OtmenaRotation();

    int id; ///< Идентификатор блока.

    std::map<int, std::vector<Posicii>> kletki; ///< Карта клеток блока, где ключ - это идентификатор, а значение - вектор позиций.

private:
    int kletkisize;            ///< Размер клетки блока.
    int rotation;              ///< Угол поворота блока.
    std::vector<Color> colors; ///< Вектор цветов блока.
    int rowPerev;              ///< Количество переворотов блока по строкам.
    int colPerev;              ///< Количество переворотов блока по колонкам.

    /**
     * Получить цвета для блока.
     *
     * Функция, которая возвращает вектор цветов для блока.
     * \return Вектор цветов.
     */
};
#endif